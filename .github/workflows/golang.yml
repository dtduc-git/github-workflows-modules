name: golang-pipeline

on:
  workflow_call:
    inputs:
      # pass in environment through manual trigger, if not passed in, default to 'dev'
      env:
        required: true
        type: string
        default: 'dev'
      # working-directory is added to accommodate monorepo.  For multi repo, defaults to '.', current directory
      working-directory:
        required: false
        type: string
        default: '.'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "JFROG_URL=${{ secrets.JFROG_URL }} >> $GITHUB_ENV"
          echo "GOLANG_REPOSITORY=${{ secrets.GOLANG_REPOSITORY }} >> $GITHUB_ENV"
          echo "GOLANG_IMAGE=${{ secrets.GOLANG_IMAGE }} >> $GITHUB_ENV"
          echo "GOLANG_TAG=${{ env.GITHUB_SHA }} >> $GITHUB_ENV"

      - name: Login to JFrog üê∏  
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.JFROG_URL }}
          username: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_PASSWORD }}

      - name: Build and push üê≥
        id: build-image
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          echo ${JFROG_URL}/${GOLANG_REPOSITORY}/${GOLANG_IMAGE}:${GOLANG_TAG}
          docker build -t ${JFROG_URL}/${GOLANG_REPOSITORY}/${GOLANG_IMAGE}:${GOLANG_TAG} .
          docker push ${JFROG_URL}/${GOLANG_REPOSITORY}/${GOLANG_IMAGE}:${GOLANG_TAG}
