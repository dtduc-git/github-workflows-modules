name: golang-pipeline

on:
  workflow_call:
    inputs:
      # pass in environment through manual trigger, if not passed in, default to 'dev'
      env:
        required: true
        type: string
        default: 'dev'
      # working-directory is added to accommodate monorepo.  For multi repo, defaults to '.', current directory
      working-directory:
        required: false
        type: string
        default: '.'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # - name: Decode base64 secrets
      #   uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      #   env:
      #     JFROG_URL: ${{ secrets.JFROG_URL }}
      #     GOLANG_REPOSITORY: ${{ secrets.GOLANG_REPOSITORY }}
      #     GOLANG_IMAGE: ${{ secrets.GOLANG_IMAGE }}
      #     GOLANG_TAG: ${{ secrets.GOLANG_TAG }}
      #   run: |
      #     echo $JFROG_URL | base64 -d > lib/path/to/secrets.dart
      #     echo $GOLANG_REPOSITORY | base64 -d > lib/path/to/secrets.dart
      #     echo $GOLANG_IMAGE | base64 -d > lib/path/to/secrets.dart
      #     echo $GOLANG_TAG | base64 -d > lib/path/to/secrets.dart

      # - name: Set environment variables
      #   shell: bash
      #   env:
      #     JFROG_URL: ${{ secrets.JFROG_URL }}
      #   run: |
      #     echo $JFROG_URL
      #     echo ${{ secrets.JFROG_URL }}
      #     echo $JFROG_URL | base64 -d

      # - name: Testing
      #   shell: bash
      #   env:
      #     JFROG_URL: ${{ secrets.JFROG_URL }}
      #   run: |
      #     echo "The GitHub Action Secret will be masked:  "
      #     echo ${{ secrets.JFROG_USER }}
      #     echo "Trick to echo GitHub Actions Secret:  "
      #     echo ${{secrets.JFROG_USER}} | sed 's/./& /g' 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to JFrog üê∏  
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ secrets.JFROG_URL }}
          username: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_PASSWORD }}
          logout: false
      
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: |
      #       my-docker-hub-namespace/my-docker-hub-repository
      #       ghcr.io/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          # context: .
          push: true
          tags: golang-artifactory/testing:latest

      # - name: Build and push üê≥
      #   id: build-image
      #   run: |
      #     # Build a docker container and push it to jfrog so that it can be deployed to EKS.
      #     echo ${{ secrets.JFROG_URL }}/${{ secrets.GOLANG_REPOSITORY }}/${{ secrets.GOLANG_IMAGE }}:${{ secrets.GOLANG_TAG }}
      #     docker build -t ${JFROG_URL}/${GOLANG_REPOSITORY}/${GOLANG_IMAGE}:${GOLANG_TAG} .
      #     docker push ${JFROG_URL}/${GOLANG_REPOSITORY}/${GOLANG_IMAGE}:${GOLANG_TAG}
